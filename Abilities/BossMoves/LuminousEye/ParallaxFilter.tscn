[gd_scene load_steps=4 format=3 uid="uid://br753bjwdllpx"]

[ext_resource type="Material" uid="uid://b3ukajpglideu" path="res://Abilities/BossMoves/LuminousEye/ParallaxFilter.material" id="1_2l7x4"]

[sub_resource type="PlaceholderTexture2D" id="PlaceholderTexture2D_e6hop"]
size = Vector2(34, 34)

[sub_resource type="GDScript" id="GDScript_yfm2u"]
script/source = "class_name ParallaxFilter extends Sprite2D

var duration = 1.0
var final_strength = 1.0
@onready var parent = get_parent()

func _init(init_duration: float, init_final_strength: float) -> void:
	duration = init_duration
	final_strength = init_final_strength
	material = load(\"res://Abilities/BossMoves/LuminousEye/ParallaxFilter.material\")
	texture = PlaceholderTexture2D.new()
	texture.size = Vector2(34, 34)
	z_index = 2

func _ready():
	var tween = get_tree().create_tween()
	#tween.tween_property(self.material, \":shader_parameter/distortion_texture:noise:offset:x\", 500.0, duration)
	tween.tween_method(set_shader_value, 0.0, 500.0, duration)
	tween.set_ease(Tween.EASE_IN)
	#tween.parallel()
	#tween.tween_property(parent, \":modulate:a\", 0.0, duration)
	tween.play()

func _process(delta: float) -> void:
	print(material.get_shader_parameter(\"distortion_texture\").noise.offset)

# tween value automatically gets passed into this function
func set_shader_value(value: float):
	# in my case i'm tweening a shader on a texture rect, but you can use anything with a material on it
	#material.set_shader_parameter(\"distortion_texture:noise:offset:x\", value);
	material.get_shader_parameter(\"distortion_texture\").noise.offset.x = value
"

[node name="ParallaxFilter" type="Sprite2D"]
z_index = 2
material = ExtResource("1_2l7x4")
texture = SubResource("PlaceholderTexture2D_e6hop")
script = SubResource("GDScript_yfm2u")
